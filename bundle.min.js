/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var Remus = __webpack_require__(2);

var remus = new Remus();

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
	if (true) {
	  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (typeof exports === 'object') {
	  module.exports = factory();
	} else {
	  root.Remus = factory();
	}
}(this, function () {
  function Remus() {
		
		var defaults = {
			element: '.remus'
		};
		
		if (arguments[0] && typeof arguments[0] === "object") {
      this.options = merge(defaults, arguments[0]);
    } else {
			this.options = defaults;
		}
		
		this.remus = document.querySelector(this.options.element);
		this.elements = Array.prototype.slice.call(this.remus.children);
		this.handles = [];
		this.activeHandle = null;
		this.width = null;
		
		window.onload = onWindowLoaded.bind(this);
		window.onresize = this.refresh.bind(this);
	}
	
	Remus.prototype.refresh = function () {
		this.width = this.remus.clientWidth;
		this.elements[this.elements.length - 1].style.width = (this.width / this.elements.length) * (this.elements.length) + 'px';
		this.elements[this.elements.length - 1].children[0].style.width = this.width + 'px';
		for (var i = 0; i < this.elements.length - 1; i++) {
			this.elements[i].style.width = (this.width / this.elements.length) * (i + 1) + 'px';
			this.elements[i].children[0].style.width = this.width + 'px';
			this.handles[i].style.left = (this.width / this.elements.length) * (i + 1) - this.handles[i].clientWidth/2 + 'px';		
		}
	}
	
	function onWindowLoaded() {
		this.width = this.remus.clientWidth;
			
		createHandles.call(this);
		registerDocumentListeners.call(this);
	}
	
	function createHandles() {
		var placeholder = document.createElement('div');
		this.elements[0].style.zIndex = this.elements.length - 1 + 100;
		this.elements[this.elements.length - 1].children[0].style.width = this.width + 'px';
		
		for (var i = 0; i < this.elements.length - 1; i++) {
			placeholder.innerHTML = '<div class="remus-handle handle-' + i + '"></div>';	
			this.handles[i] = placeholder.firstChild;
			this.remus.appendChild(placeholder.firstChild);	
			
			// set z-indexes and initial view area and position
			this.elements[i + 1].style.zIndex = this.elements.length - (2 * i + 3) + 100;
			this.elements[i].style.width = (this.width / this.elements.length) * (i + 1) + 'px';
			this.elements[i].children[0].style.width = this.width + 'px';
			this.handles[i].style.zIndex = this.elements.length - 2*i + 100;
			this.handles[i].style.left = (this.width / this.elements.length) * (i + 1) - this.handles[i].clientWidth/2 + 'px';
			this.handles[i].element = this.elements[i];

			registerHandleListener.call(this, i);
		}
	}
	
	function registerHandleListener(id) {
		var handle = this.handles[id];
		
		handle.addEventListener('mousedown', function (e) {
			handle.offset = e.pageX - handle.offsetLeft;
			this.activeHandle = handle;
		}.bind(this));
		
		handle.addEventListener('touchstart', function (e) {
			e = e.targetTouches[0];
			handle.offset = e.pageX - handle.offsetLeft;
			this.activeHandle = handle;
		}.bind(this));
	}
	
	function registerDocumentListeners() {
		document.addEventListener('mousemove', changeViewArea.bind(this));
		
		document.addEventListener('mouseup', function (e) {
			this.activeHandle = null;
		}.bind(this));
		
		// touch listeners
		document.addEventListener('touchmove', changeViewArea.bind(this));
		
		document.addEventListener('touchend', function (e) {
			this.activeHandle = null;
		}.bind(this));
	}
	
	function changeViewArea(e) {
		if (e.changedTouches) {
			e = e.changedTouches[0];
		}
		if (this.activeHandle) {
			var handle = this.activeHandle;
			var handlePosition = Math.min(Math.max(e.clientX - handle.offset, 0 -  handle.clientWidth / 2), this.width - handle.clientWidth / 2);
			var elementPosition = handlePosition + handle.clientWidth / 2;
			handle.style.left = handlePosition + 'px';
			handle.element.style.width = elementPosition + 'px';
		}
	}
	
	function merge(source, properties) {
    var property;
    for (property in properties) {
      if (properties.hasOwnProperty(property)) {
        source[property] = properties[property];
      }
    }
    return source;
  }
	
	return Remus;
}));

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1);
module.exports = __webpack_require__(0);


/***/ })
/******/ ]);